// <auto-generated />
using Football.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Football.Migrations
{
    [DbContext(typeof(FootballDbContext))]
    partial class FootballDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Football.Models.Match", b =>
                {
                    b.Property<int>("HteamId");

                    b.Property<int>("AteamId");

                    b.Property<int>("Id");

                    b.Property<string>("Score");

                    b.HasKey("HteamId", "AteamId");

                    b.HasIndex("AteamId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("Football.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("TeamId");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new { Id = 1, Name = "Keppa", TeamId = 1 },
                        new { Id = 2, Name = "Luiz", TeamId = 1 },
                        new { Id = 3, Name = "Hazard", TeamId = 1 },
                        new { Id = 4, Name = "Cheh", TeamId = 2 },
                        new { Id = 5, Name = "Mustafi", TeamId = 2 },
                        new { Id = 6, Name = "Aubamejang", TeamId = 2 }
                    );
                });

            modelBuilder.Entity("Football.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("TrainerId");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId")
                        .IsUnique();

                    b.ToTable("Teams");

                    b.HasData(
                        new { Id = 1, Name = "Chelsea", TrainerId = 1 },
                        new { Id = 2, Name = "Arsenal", TrainerId = 2 }
                    );
                });

            modelBuilder.Entity("Football.Models.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Trainers");

                    b.HasData(
                        new { Id = 1, Name = "Sarry" },
                        new { Id = 2, Name = "Emery" }
                    );
                });

            modelBuilder.Entity("Football.Models.Match", b =>
                {
                    b.HasOne("Football.Models.Team", "Ateam")
                        .WithMany("Amatches")
                        .HasForeignKey("AteamId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Football.Models.Team", "Hteam")
                        .WithMany("Hmatches")
                        .HasForeignKey("HteamId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Football.Models.Player", b =>
                {
                    b.HasOne("Football.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Football.Models.Team", b =>
                {
                    b.HasOne("Football.Models.Trainer", "Trainer")
                        .WithOne("Team")
                        .HasForeignKey("Football.Models.Team", "TrainerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
